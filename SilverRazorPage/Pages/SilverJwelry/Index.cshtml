@page
@model SilverRazorPage.Pages.SilverJwelry.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Silver Jewelry</h1>
@{
    var role = HttpContext.Session.GetString("role");
}

@if (!string.IsNullOrEmpty(role) && role.Equals("Administrator", StringComparison.OrdinalIgnoreCase))
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].SilverJewelryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].SilverJewelryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].SilverJewelryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].MetalWeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].ProductionYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SilverJewelry[0].AccountId)
            </th>
            <th>
                Category Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @* Tạo từ điển ánh xạ CategoryId sang CategoryName *@
        @{
            var categoryDictionary = new Dictionary<string, string>(); // Thay đổi int thành string
            foreach (var category in Model.Categories)
            {
                categoryDictionary[category.CategoryId.ToString()] = category.CategoryName; // Đảm bảo bạn chuyển đổi CategoryId thành string
            }
        }


        @foreach (var item in Model.SilverJewelry)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SilverJewelryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SilverJewelryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SilverJewelryDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MetalWeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductionYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountId)
                </td>
                <td>
                    @* Lấy CategoryName từ từ điển dựa vào CategoryId *@
                    @if (categoryDictionary.TryGetValue(item.CategoryId.ToString(), out var categoryName)) // Chuyển đổi item.CategoryId thành string
                    {
                        @categoryName
                    }
                    else
                    {
                        <span>Not Found</span> @* Hiển thị thông báo nếu không tìm thấy danh mục *@
                    }
                </td>

                @if (!string.IsNullOrEmpty(role) && role.Equals("Administrator", StringComparison.OrdinalIgnoreCase))
                {
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.SilverJewelryId">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.SilverJewelryId">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.SilverJewelryId">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
